esphome:
  name: mando-estudio
  on_boot:
    then:
    - display.page.show: pageInicializando
    - script.execute:
        id: encenderPantalla


esp32:
  board: az-delivery-devkit-v4
  framework:
    type: arduino

# Enable logging
logger:

ota:
  on_begin:
    then:
    - display.page.show: pageActualizando
    - script.execute:
        id: encenderPantalla

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: mando-estudio.lan



i2c:
  sda: GPIO21
  scl: GPIO22

binary_sensor:
  - platform: gpio
    id: leftButton
    pin:
      number: GPIO33
      mode:
        input: true
        pullup: true
      inverted: true
    filters:
      - delayed_on_off: 10ms
    on_press:
      then: 
        - lambda: |-
            id(globalLeftPulsado) = true;
            id(mqttClient).publish("casa/mandos/command/1E0000000006/" + id(globalState) + "/left", "down");
        - script.execute:
            id: encenderPantalla
        

    on_release:
      then:
        - lambda: |-
            id(globalLeftPulsado) = false;
            id(mqttClient).publish("casa/mandos/command/1E0000000006/" + id(globalState) + "/left", "up");
            if(id(globalRightPulsado))
            {
              id(mqttClient).publish("casa/mandos/command/1E0000000006/" + id(globalState) + "/both", "click");
              id(globalBothClickLanzado) = true;
            }
            else if(!id(globalBothClickLanzado))
            {
              id(mqttClient).publish("casa/mandos/command/1E0000000006/" + id(globalState) + "/left", "click");
            }
            else
            {
              id(globalBothClickLanzado) = false;
            }
        - script.execute:
            id: encenderPantalla

  - platform: gpio
    id: rightButton
    pin:
      number: GPIO19
      mode:
        input: true
        pullup: true
      inverted: true
    filters:
      - delayed_on_off: 10ms
    on_press:
      then: 
        - lambda: |-
            id(globalRightPulsado) = true;
            id(mqttClient).publish("casa/mandos/command/1E0000000006/" + id(globalState) + "/right", "down");
        - script.execute:
            id: encenderPantalla
 
    on_release:
      then:
        - lambda: |-
            id(globalRightPulsado) = false;
            id(mqttClient).publish("casa/mandos/command/1E0000000006/" + id(globalState) + "/right", "up");

            if(id(globalLeftPulsado))
            {
              id(mqttClient).publish("casa/mandos/command/1E0000000006/" + id(globalState) + "/both", "click");
              id(globalBothClickLanzado) = true;
            }
            else if(!id(globalBothClickLanzado))
            {
              id(mqttClient).publish("casa/mandos/command/1E0000000006/" + id(globalState) + "/right", "click");
            }
            else
            {
              id(globalBothClickLanzado) = false;
            }
        - script.execute:
            id: encenderPantalla
 


globals:
  - id: globalName
    type: std::string

  - id: globalState
    type: std::string

  - id: globalText
    type: std::string

  - id: globalLeftPulsado
    type: bool
    initial_value: 'false'

  - id: globalRightPulsado
    type: bool
    initial_value: 'false'

  - id: globalBothClickLanzado
    type: bool
    initial_value: 'false'
mqtt:
  id: mqttClient
  broker: !secret mqtt_broker
  client_id: mando-estudio
  log_topic: casa/mando-estudio/log
  birth_message:
    topic: casa/mandos/initialize
    payload: '1E0000000006'
  will_message:
    topic: casa/displaysala/status
    payload: 'OFF'
  on_json_message:
    topic: casa/mandos/1E0000000006/setState
    then:
      - display.page.show: pageDefault
      - lambda: |-
          id(globalName) = x["name"] | "";
          id(globalState) = x["state"] | "";
          id(globalText) = x["text"] | "";
      - component.update: pantalla
      - script.execute:
          id: encenderPantalla
 
script:
  - id: encenderPantalla
    mode: restart
    then:
      - lambda: |-
          id(pantalla).turn_on();
          id(pantalla).set_contrast(.50);
      - delay: 5s
      - lambda: id(pantalla).set_contrast(.10);
      - delay: 60s
      - lambda: id(pantalla).turn_off();
      
color:
  - id: colorNegro
    red: 0%
    green: 0%
    blue: 0%
  
  - id: colorBlanco
    red: 100%
    green: 100%
    blue: 100%

font:
  - file: "fonts/NotoSans-Bold.ttf"
    id: font10
    size: 10

  - file: "fonts/NotoSans-Bold.ttf"
    id: font15
    size: 15


  - file: "fonts/NotoSans-Bold.ttf"
    id: font20
    size: 20

display:
  - id: pantalla
    platform: ssd1306_i2c
    model: "SH1106 128x64"
    update_interval: 20s
    address: 0x3C
    contrast: 25%
    pages:
      - id: pageActualizando
        lambda: |-
          it.print(64, 32, id(font15), id(colorBlanco), TextAlign::CENTER, "Actualizando...");  
 
      - id: pageInicializando
        lambda: |-
          it.print(64, 32, id(font15), id(colorBlanco), TextAlign::CENTER, "Inicializando...");  

      - id: pageDefault
        lambda: |-
          it.filled_rectangle(0, 0, 128, 20);
          it.print(2, 2, id(font10), id(colorNegro), TextAlign::RIGHT, id(globalName).c_str());
          it.print(64, 37, id(font20), id(colorBlanco), TextAlign::CENTER, id(globalText).c_str());  
 